/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CaS.MatrixSolver;

import CaS.CaS;
import java.awt.MouseInfo;
import java.awt.Point;
import javax.swing.ImageIcon;

/**
 *
 * @author Bilal
 */
public class MatrixSolver extends javax.swing.JFrame {

    /**
     * Creates new form MatrixSolver
     */
    public MatrixSolver() {
        this.setUndecorated(true);
        initComponents();
        this.setLocationRelativeTo(null);
        setIcon();
        MatrixA.setTabSize(tabSize - 1);
        MatrixB.setTabSize(tabSize - 1);
        MatrixC.setTabSize(tabSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MatrixA = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MatrixB = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        MatrixC = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        firstOperator = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        secondOperator = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        statusBar = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        btnApB = new javax.swing.JButton();
        btnAsB = new javax.swing.JButton();
        btnBsA = new javax.swing.JButton();
        btnAmB = new javax.swing.JButton();
        btnBmA = new javax.swing.JButton();
        btnAdjA = new javax.swing.JButton();
        btnInvA = new javax.swing.JButton();
        btnInvB = new javax.swing.JButton();
        btnTansposeA = new javax.swing.JButton();
        btnTransposeB = new javax.swing.JButton();
        btnDetA = new javax.swing.JButton();
        btnDetB = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Exit = new javax.swing.JLabel();
        Minimise = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(58, 62, 69));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setBackground(new java.awt.Color(223, 222, 222));

        jPanel6.setBackground(new java.awt.Color(223, 222, 222));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Input / Output Matrix"));
        jPanel6.setPreferredSize(new java.awt.Dimension(771, 250));

        MatrixA.setColumns(20);
        MatrixA.setRows(5);
        MatrixA.setText("\n\n\n\n\n\n\n\n\n\n\n\n\t\t            Matrix A");
        MatrixA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatrixAMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MatrixAMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(MatrixA);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        MatrixB.setColumns(20);
        MatrixB.setRows(5);
        MatrixB.setText("\n\n\n\n\n\n\n\n\n\n\n\n\t\t            Matrix B");
        MatrixB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatrixBMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MatrixBMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(MatrixB);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel9.setPreferredSize(new java.awt.Dimension(250, 0));

        MatrixC.setEditable(false);
        MatrixC.setColumns(20);
        MatrixC.setRows(5);
        MatrixC.setText("\n\n\n\n\n\n\n\n\n\n\n\n\t\t     Matrix C");
        jScrollPane3.setViewportView(MatrixC);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jPanel10.setBackground(new java.awt.Color(223, 222, 222));
        jPanel10.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(firstOperator, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(firstOperator, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(223, 222, 222));
        jPanel11.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secondOperator, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secondOperator, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBackground(new java.awt.Color(204, 204, 204));

        statusBar.setText("Ready");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(statusBar)
                .addGap(2, 2, 2))
        );

        jPanel15.setBackground(new java.awt.Color(223, 222, 222));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Control"));

        btnApB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnApB.setText("A + B = C");
        btnApB.setPreferredSize(new java.awt.Dimension(60, 15));
        btnApB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApBActionPerformed(evt);
            }
        });

        btnAsB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAsB.setText("A - B = C");
        btnAsB.setPreferredSize(new java.awt.Dimension(60, 15));
        btnAsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsBActionPerformed(evt);
            }
        });

        btnBsA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBsA.setText("B - A = C");
        btnBsA.setPreferredSize(new java.awt.Dimension(60, 15));
        btnBsA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBsAActionPerformed(evt);
            }
        });

        btnAmB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAmB.setText("A * B = C");
        btnAmB.setPreferredSize(new java.awt.Dimension(60, 15));
        btnAmB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmBActionPerformed(evt);
            }
        });

        btnBmA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBmA.setText("B * A = C");
        btnBmA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBmAActionPerformed(evt);
            }
        });

        btnAdjA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdjA.setText("Adjoint(A) = C");
        btnAdjA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdjAActionPerformed(evt);
            }
        });

        btnInvA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnInvA.setText("Inverse(A) = C");
        btnInvA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvAActionPerformed(evt);
            }
        });

        btnInvB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnInvB.setText("Inverse(B) = C");
        btnInvB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvBActionPerformed(evt);
            }
        });

        btnTansposeA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTansposeA.setText("Transpose(A) = C");
        btnTansposeA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTansposeAActionPerformed(evt);
            }
        });

        btnTransposeB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTransposeB.setText("Transpose(B) = C");
        btnTransposeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransposeBActionPerformed(evt);
            }
        });

        btnDetA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDetA.setText("Determinant(A) = C");
        btnDetA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetAActionPerformed(evt);
            }
        });

        btnDetB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDetB.setText("Determinant(B) = C");
        btnDetB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnTansposeA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(btnApB, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBmA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAsB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdjA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTransposeB, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBsA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetA, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAmB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetB, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAsB, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnAmB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBsA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnApB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBmA, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnAdjA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInvB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTansposeA, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnTransposeB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDetB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(58, 62, 69));
        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel4MouseDragged(evt);
            }
        });
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel4MousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(58, 62, 69));

        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Close.png"))); // NOI18N
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });

        Minimise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Minimise.png"))); // NOI18N
        Minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimiseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MinimiseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MinimiseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Minimise)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Exit)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Minimise, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(Exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel5.setBackground(new java.awt.Color(58, 62, 69));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/CaS - Matrix Solver Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Logo))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new CaS().setVisible(true);
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        // TODO add your handling code here:
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Close - Mouse Clicked.png")));
    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        // TODO add your handling code here:
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Close.png")));
    }//GEN-LAST:event_ExitMouseExited

    private void MinimiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseMouseClicked
        // TODO add your handling code here:
        setExtendedState(ICONIFIED);
    }//GEN-LAST:event_MinimiseMouseClicked

    private void MinimiseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseMouseEntered
        // TODO add your handling code here:
        Minimise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Minimise - Mouse Clicked.png")));
    }//GEN-LAST:event_MinimiseMouseEntered

    private void MinimiseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimiseMouseExited
        // TODO add your handling code here:
        Minimise.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/Icon/Minimise.png")));
    }//GEN-LAST:event_MinimiseMouseExited

    private void jPanel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseDragged
        // TODO add your handling code here:
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x - x, point.y - y);
    }//GEN-LAST:event_jPanel4MouseDragged

    private void jPanel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MousePressed
        // TODO add your handling code here:
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel4MousePressed

    private void btnApBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Plus.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.AddMatrix(MF.ReadInMatrix(MatrixA, statusBar),
                    MF.ReadInMatrix(MatrixB, statusBar), statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnApBActionPerformed

    private void MatrixAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatrixAMouseClicked
        // TODO add your handling code here:
        if (MatrixA.getText().equals("\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "		            Matrix A"))
        MatrixA.setText(null);
        MatrixA.setEditable(true);
    }//GEN-LAST:event_MatrixAMouseClicked

    private void MatrixBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatrixBMouseClicked
        // TODO add your handling code here:
        if (MatrixB.getText().equals("\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "		            Matrix B"))
        MatrixB.setText(null);
        MatrixB.setEditable(true);
    }//GEN-LAST:event_MatrixBMouseClicked

    private void btnAsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Minus.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.SubABMatrix(MF.ReadInMatrix(MatrixA, statusBar),
                    MF.ReadInMatrix(MatrixB, statusBar), statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnAsBActionPerformed

    private void btnBsAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBsAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Minus.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.SubBAMatrix(MF.ReadInMatrix(MatrixA, statusBar),
                    MF.ReadInMatrix(MatrixB, statusBar), statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnBsAActionPerformed

    private void btnAmBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Multiply.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.MultiplyMatrix(MF.ReadInMatrixNotSquare(MatrixA),
                    MF.ReadInMatrixNotSquare(MatrixB), statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnAmBActionPerformed

    private void btnBmAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBmAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Multiply.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.MultiplyMatrix(MF.ReadInMatrixNotSquare(MatrixB),
                    MF.ReadInMatrixNotSquare(MatrixA), statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnBmAActionPerformed

    private void btnTansposeAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTansposeAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Transpose A.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.Transpose(MF.ReadInMatrixNotSquare(MatrixA)), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnTansposeAActionPerformed

    private void btnTransposeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransposeBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Transpose B.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.Transpose(MF.ReadInMatrixNotSquare(MatrixB)), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnTransposeBActionPerformed

    private void btnDetAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Det (A).png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MatrixC.setText("Det(A): " + String.valueOf(MF.Determinant(MF.ReadInMatrix(MatrixA, statusBar))));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnDetAActionPerformed

    private void btnDetBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Det (B).png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MatrixC.setText("Det(B): " + String.valueOf(MF.Determinant(MF.ReadInMatrix(MatrixB, statusBar))));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnDetBActionPerformed

    private void btnAdjAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdjAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            if (btnAdjA.getText().equals("Adjoint(A) = C")) {
                btnAdjA.setText("Adjoint(B) = C");
                firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/A (A).png")));
                secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
                MF.DisplayMatrix(MF.Adjoint(MF.ReadInMatrix(MatrixA, statusBar)), MatrixC);
                secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
            } else {
                btnAdjA.setText("Adjoint(A) = C");
                firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/A (B).png")));
                secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
                MF.DisplayMatrix(MF.Adjoint(MF.ReadInMatrix(MatrixB, statusBar)), MatrixC);
                secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
            }
            
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnAdjAActionPerformed

    private void btnInvAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvAActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Inv A.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.Inverse(MF.ReadInMatrix(MatrixA, statusBar)
                    , statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnInvAActionPerformed

    private void btnInvBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvBActionPerformed
        // TODO add your handling code here:
        try {
            MatrixC.setText(null);
            firstOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Inv B.png")));
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Question Mark.png")));
            MF.DisplayMatrix(MF.Inverse(MF.ReadInMatrix(MatrixB, statusBar)
                    , statusBar), MatrixC);
            secondOperator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CaS/MatrixSolver/Icon/Equal.png")));
        } catch (Exception e) {
            System.err.println("Error: " + e);
        }
        if (statusBar.getText().equals("Ready"))
            statusBar.setText("Done");
    }//GEN-LAST:event_btnInvBActionPerformed

    private void MatrixAMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatrixAMousePressed
        // TODO add your handling code here:
        if (MatrixA.getText().equals("\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "		            Matrix A"))
        MatrixA.setText(null);
        MatrixA.setEditable(true);
    }//GEN-LAST:event_MatrixAMousePressed

    private void MatrixBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatrixBMousePressed
        // TODO add your handling code here:
        if (MatrixB.getText().equals("\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "		            Matrix B"))
        MatrixB.setText(null);
        MatrixB.setEditable(true);
    }//GEN-LAST:event_MatrixBMousePressed

    private void setIcon() {
        setIconImage(new ImageIcon(getClass().getResource("/CaS/Icon/CaS Logo - Start Bar.png")).getImage());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatrixSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatrixSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatrixSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatrixSolver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatrixSolver().setVisible(true);
            }
        });
    }
    
    // Global Variables
    private int x, y;
    private Matrix_Functions MF = new Matrix_Functions();
    // Change the tab size
    private final int tabSize = 4;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Exit;
    private javax.swing.JLabel Logo;
    private javax.swing.JTextArea MatrixA;
    private javax.swing.JTextArea MatrixB;
    private javax.swing.JTextArea MatrixC;
    private javax.swing.JLabel Minimise;
    private javax.swing.JButton btnAdjA;
    private javax.swing.JButton btnAmB;
    private javax.swing.JButton btnApB;
    private javax.swing.JButton btnAsB;
    private javax.swing.JButton btnBmA;
    private javax.swing.JButton btnBsA;
    private javax.swing.JButton btnDetA;
    private javax.swing.JButton btnDetB;
    private javax.swing.JButton btnInvA;
    private javax.swing.JButton btnInvB;
    private javax.swing.JButton btnTansposeA;
    private javax.swing.JButton btnTransposeB;
    private javax.swing.JLabel firstOperator;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel secondOperator;
    private javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables
}
